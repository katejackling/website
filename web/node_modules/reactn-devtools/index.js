"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var reactn_1 = require("reactn");
var redux_1 = require("redux");
var reducer = function (state, action) { return (__assign({}, state, action.stateChange)); };
var REDUX_DEVTOOLS_OPTIONS = {
    name: 'ReactN',
};
function addReactNDevTools(Provider) {
    if (Provider === void 0) { Provider = null; }
    if (typeof window !== 'object' ||
        !window.__REDUX_DEVTOOLS_EXTENSION__) {
        return function () { return true; };
    }
    var storeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION__(REDUX_DEVTOOLS_OPTIONS);
    var store = redux_1.createStore(reducer, Provider
        ? Provider.global
        : reactn_1.getGlobal(), storeEnhancer);
    var callback = function (_newGlobalState, _dispatch, stateChange, reducerName, reducerArgs) {
        if (reducerArgs) {
            store.dispatch({
                args: reducerArgs,
                stateChange: stateChange,
                type: reducerName,
            });
        }
        else {
            store.dispatch({
                stateChange: stateChange,
                type: 'STATE_CHANGE',
            });
        }
        return null;
    };
    if (Provider) {
        return Provider.addCallback(callback);
    }
    return reactn_1.addCallback(callback);
}
exports.default = addReactNDevTools;
