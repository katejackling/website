{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/components/ProjectViewer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setSlide } from \"../utils/redux/actions\";\nimport useWindowSize from \"../utils/hooks/useWindowSize\";\nimport { capitalize } from \"../scripts/utils\";\nimport * as ViewerSections from \"./viewer\";\n\nfunction ProjectViewer(props) {\n  var content = props.content,\n      clickEnabled = props.clickEnabled,\n      slideIndex = props.slideIndex,\n      setSlide = props.setSlide;\n\n  var resolveSections = function resolveSections(section) {\n    // eslint-disable-next-line import/namespace\n    var Section = ViewerSections[capitalize(section._type)];\n\n    if (Section) {\n      return Section;\n    }\n\n    console.error(\"Cant find section\", section); // eslint-disable-line no-console\n\n    return null;\n  };\n\n  console.log(props);\n  return __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, content.map(function (section, i) {\n    var ViewerSection = resolveSections(section);\n\n    if (!ViewerSection) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Missing section \", section._type);\n    }\n\n    return __jsx(\"li\", {\n      key: section._key,\n      className: slideIndex === i ? \"visible\" : \"hidden\" //style={{ pointerEvents: clickEnabled ? \"auto\" : \"none\" }}\n      ,\n      onMouseUp: function onMouseUp() {\n        console.log(i);\n\n        if (clickEnabled) {\n          setSlide(slideIndex === content.length - 1 ? 0 : i + 1);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(ViewerSection, _extends({}, section, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    slideIndex: state.viewer.slideIndex\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setSlide: setSlide\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectViewer);","map":{"version":3,"sources":["/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/components/ProjectViewer.js"],"names":["useState","useRef","connect","bindActionCreators","setSlide","useWindowSize","capitalize","ViewerSections","ProjectViewer","props","content","clickEnabled","slideIndex","resolveSections","section","Section","_type","console","error","log","map","i","ViewerSection","_key","length","mapStateToProps","state","viewer","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,KAAKC,cAAZ,MAAgC,UAAhC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,MACrBC,OADqB,GAC2BD,KAD3B,CACrBC,OADqB;AAAA,MACZC,YADY,GAC2BF,KAD3B,CACZE,YADY;AAAA,MACEC,UADF,GAC2BH,KAD3B,CACEG,UADF;AAAA,MACcR,QADd,GAC2BK,KAD3B,CACcL,QADd;;AAG7B,MAAIS,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO,EAAI;AAChC;AACA,QAAMC,OAAO,GAAGR,cAAc,CAACD,UAAU,CAACQ,OAAO,CAACE,KAAT,CAAX,CAA9B;;AACA,QAAID,OAAJ,EAAa;AACZ,aAAOA,OAAP;AACA;;AACDE,IAAAA,OAAO,CAACC,KAAR,CAAc,mBAAd,EAAmCJ,OAAnC,EANgC,CAMa;;AAC7C,WAAO,IAAP;AACA,GARD;;AAUAG,EAAAA,OAAO,CAACE,GAAR,CAAYV,KAAZ;AAEA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,OAAO,CAACU,GAAR,CAAY,UAACN,OAAD,EAAUO,CAAV,EAAgB;AAC5B,QAAMC,aAAa,GAAGT,eAAe,CAACC,OAAD,CAArC;;AACA,QAAI,CAACQ,aAAL,EAAoB;AACnB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBR,OAAO,CAACE,KAA9B,CAAP;AACA;;AACD,WACC;AACC,MAAA,GAAG,EAAEF,OAAO,CAACS,IADd;AAEC,MAAA,SAAS,EAAEX,UAAU,KAAKS,CAAf,GAAmB,SAAnB,GAA+B,QAF3C,CAGC;AAHD;AAIC,MAAA,SAAS,EAAE,qBAAM;AAChBJ,QAAAA,OAAO,CAACE,GAAR,CAAYE,CAAZ;;AAEA,YAAIV,YAAJ,EAAkB;AACjBP,UAAAA,QAAQ,CAACQ,UAAU,KAAKF,OAAO,CAACc,MAAR,GAAiB,CAAhC,GAAoC,CAApC,GAAwCH,CAAC,GAAG,CAA7C,CAAR;AACA;AACD,OAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYC,MAAC,aAAD,eAAmBP,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZD,CADD;AAgBA,GArBA,CADF,CADD;AA0BA;;AAED,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AACjCd,IAAAA,UAAU,EAAEc,KAAK,CAACC,MAAN,CAAaf;AADQ,GAAL;AAAA,CAA7B;;AAIA,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAI1B,kBAAkB,CAAC;AAAEC,IAAAA,QAAQ,EAARA;AAAF,GAAD,EAAeyB,QAAf,CAAtB;AAAA,CAAnC;;AAEA,eAAe3B,OAAO,CACrBuB,eADqB,EAErBG,kBAFqB,CAAP,CAGbpB,aAHa,CAAf","sourcesContent":["import { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setSlide } from \"../utils/redux/actions\";\nimport useWindowSize from \"../utils/hooks/useWindowSize\";\nimport { capitalize } from \"../scripts/utils\";\n\nimport * as ViewerSections from \"./viewer\";\n\nfunction ProjectViewer(props) {\n\tconst { content, clickEnabled, slideIndex, setSlide } = props;\n\n\tlet resolveSections = section => {\n\t\t// eslint-disable-next-line import/namespace\n\t\tconst Section = ViewerSections[capitalize(section._type)];\n\t\tif (Section) {\n\t\t\treturn Section;\n\t\t}\n\t\tconsole.error(\"Cant find section\", section); // eslint-disable-line no-console\n\t\treturn null;\n\t};\n\n\tconsole.log(props);\n\n\treturn (\n\t\t<ul>\n\t\t\t{content.map((section, i) => {\n\t\t\t\tconst ViewerSection = resolveSections(section);\n\t\t\t\tif (!ViewerSection) {\n\t\t\t\t\treturn <div>Missing section {section._type}</div>;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={section._key}\n\t\t\t\t\t\tclassName={slideIndex === i ? \"visible\" : \"hidden\"}\n\t\t\t\t\t\t//style={{ pointerEvents: clickEnabled ? \"auto\" : \"none\" }}\n\t\t\t\t\t\tonMouseUp={() => {\n\t\t\t\t\t\t\tconsole.log(i);\n\n\t\t\t\t\t\t\tif (clickEnabled) {\n\t\t\t\t\t\t\t\tsetSlide(slideIndex === content.length - 1 ? 0 : i + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ViewerSection {...section} />\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tslideIndex: state.viewer.slideIndex\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ setSlide }, dispatch);\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ProjectViewer);\n"]},"metadata":{},"sourceType":"module"}