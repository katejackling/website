{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useState, useCallback, useEffect, setGlobal } from \"reactn\"; // import { DimensionObject, UseDimensionsArgs, UseDimensionsHook } from \"./types\";\n\nfunction getDimensionObject(node) {\n  var rect = node.getBoundingClientRect();\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: \"x\" in rect ? rect.x : rect.top,\n    left: \"y\" in rect ? rect.y : rect.left,\n    x: \"x\" in rect ? rect.x : rect.left,\n    y: \"y\" in rect ? rect.y : rect.top,\n    right: rect.right,\n    bottom: rect.bottom\n  };\n}\n\nfunction useDimensions(global) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      dimensions = _useState2[0],\n      setDimensions = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      node = _useState4[0],\n      setNode = _useState4[1];\n\n  var ref = useCallback(function (node) {\n    setNode(node);\n  }, []);\n  useEffect(function () {\n    if (node) {\n      var measure = function measure() {\n        window.requestAnimationFrame(function () {\n          return setDimensions(getDimensionObject(node));\n        });\n\n        var globalObj = _defineProperty({}, global.global, dimensions);\n\n        console.log(globalObj);\n        global && setGlobal(_defineProperty({}, global.global, dimensions));\n      };\n\n      measure();\n      window.addEventListener(\"resize\", measure); // window.addEventListener(\"scroll\", measure);\n\n      return function () {\n        window.removeEventListener(\"resize\", measure); // window.removeEventListener(\"scroll\", measure);\n      };\n    }\n  }, [node]);\n  return [ref, dimensions, node];\n}\n\nexport default useDimensions;","map":{"version":3,"sources":["/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/utils/hooks/useDimensions.js"],"names":["useState","useCallback","useEffect","setGlobal","getDimensionObject","node","rect","getBoundingClientRect","width","height","top","x","left","y","right","bottom","useDimensions","global","dimensions","setDimensions","setNode","ref","measure","window","requestAnimationFrame","globalObj","console","log","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAA2CC,SAA3C,QAA4D,QAA5D,C,CACA;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AACjC,MAAMC,IAAI,GAAGD,IAAI,CAACE,qBAAL,EAAb;AAEA,SAAO;AACNC,IAAAA,KAAK,EAAEF,IAAI,CAACE,KADN;AAENC,IAAAA,MAAM,EAAEH,IAAI,CAACG,MAFP;AAGNC,IAAAA,GAAG,EAAE,OAAOJ,IAAP,GAAcA,IAAI,CAACK,CAAnB,GAAuBL,IAAI,CAACI,GAH3B;AAINE,IAAAA,IAAI,EAAE,OAAON,IAAP,GAAcA,IAAI,CAACO,CAAnB,GAAuBP,IAAI,CAACM,IAJ5B;AAKND,IAAAA,CAAC,EAAE,OAAOL,IAAP,GAAcA,IAAI,CAACK,CAAnB,GAAuBL,IAAI,CAACM,IALzB;AAMNC,IAAAA,CAAC,EAAE,OAAOP,IAAP,GAAcA,IAAI,CAACO,CAAnB,GAAuBP,IAAI,CAACI,GANzB;AAONI,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAPN;AAQNC,IAAAA,MAAM,EAAET,IAAI,CAACS;AARP,GAAP;AAUA;;AAED,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAAA,kBACMjB,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACvBkB,UADuB;AAAA,MACXC,aADW;;AAAA,mBAENnB,QAAQ,CAAC,IAAD,CAFF;AAAA;AAAA,MAEvBK,IAFuB;AAAA,MAEjBe,OAFiB;;AAI9B,MAAMC,GAAG,GAAGpB,WAAW,CAAC,UAAAI,IAAI,EAAI;AAC/Be,IAAAA,OAAO,CAACf,IAAD,CAAP;AACA,GAFsB,EAEpB,EAFoB,CAAvB;AAIAH,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIG,IAAJ,EAAU;AACT,UAAMiB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACrBC,QAAAA,MAAM,CAACC,qBAAP,CAA6B;AAAA,iBAAML,aAAa,CAACf,kBAAkB,CAACC,IAAD,CAAnB,CAAnB;AAAA,SAA7B;;AACA,YAAIoB,SAAS,uBAAMR,MAAM,CAACA,MAAb,EAAsBC,UAAtB,CAAb;;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAR,QAAAA,MAAM,IAAId,SAAS,qBAAIc,MAAM,CAACA,MAAX,EAAoBC,UAApB,EAAnB;AACA,OALD;;AAOAI,MAAAA,OAAO;AAEPC,MAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCN,OAAlC,EAVS,CAWT;;AAEA,aAAO,YAAM;AACZC,QAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCP,OAArC,EADY,CAEZ;AACA,OAHD;AAIA;AACD,GAnBQ,EAmBN,CAACjB,IAAD,CAnBM,CAAT;AAqBA,SAAO,CAACgB,GAAD,EAAMH,UAAN,EAAkBb,IAAlB,CAAP;AACA;;AAED,eAAeW,aAAf","sourcesContent":["import { useState, useCallback, useEffect, setGlobal } from \"reactn\";\n// import { DimensionObject, UseDimensionsArgs, UseDimensionsHook } from \"./types\";\n\nfunction getDimensionObject(node) {\n\tconst rect = node.getBoundingClientRect();\n\n\treturn {\n\t\twidth: rect.width,\n\t\theight: rect.height,\n\t\ttop: \"x\" in rect ? rect.x : rect.top,\n\t\tleft: \"y\" in rect ? rect.y : rect.left,\n\t\tx: \"x\" in rect ? rect.x : rect.left,\n\t\ty: \"y\" in rect ? rect.y : rect.top,\n\t\tright: rect.right,\n\t\tbottom: rect.bottom\n\t};\n}\n\nfunction useDimensions(global) {\n\tconst [dimensions, setDimensions] = useState({});\n\tconst [node, setNode] = useState(null);\n\n\tconst ref = useCallback(node => {\n\t\tsetNode(node);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (node) {\n\t\t\tconst measure = () => {\n\t\t\t\twindow.requestAnimationFrame(() => setDimensions(getDimensionObject(node)));\n\t\t\t\tlet globalObj = { [global.global]: dimensions };\n\t\t\t\tconsole.log(globalObj);\n\t\t\t\tglobal && setGlobal({ [global.global]: dimensions });\n\t\t\t};\n\n\t\t\tmeasure();\n\n\t\t\twindow.addEventListener(\"resize\", measure);\n\t\t\t// window.addEventListener(\"scroll\", measure);\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener(\"resize\", measure);\n\t\t\t\t// window.removeEventListener(\"scroll\", measure);\n\t\t\t};\n\t\t}\n\t}, [node]);\n\n\treturn [ref, dimensions, node];\n}\n\nexport default useDimensions;\n"]},"metadata":{},"sourceType":"module"}