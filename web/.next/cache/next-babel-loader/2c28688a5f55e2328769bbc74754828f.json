{"ast":null,"code":"import { useState, useCallback, useEffect } from \"react\"; // import { DimensionObject, UseDimensionsArgs, UseDimensionsHook } from \"./types\";\n\nfunction getDimensionObject(node) {\n  var rect = node.getBoundingClientRect();\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: \"x\" in rect ? rect.x : rect.top,\n    left: \"y\" in rect ? rect.y : rect.left,\n    x: \"x\" in rect ? rect.x : rect.left,\n    y: \"y\" in rect ? rect.y : rect.top,\n    right: rect.right,\n    bottom: rect.bottom\n  };\n}\n\nfunction useDimensions() {\n  var _useState = useState({}),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  var _useState2 = useState(null),\n      node = _useState2[0],\n      setNode = _useState2[1];\n\n  var ref = useCallback(function (node) {\n    setNode(node);\n  }, []);\n  useEffect(function () {\n    if (node) {\n      var measure = function measure() {\n        window.requestAnimationFrame(function () {\n          return setDimensions(getDimensionObject(node));\n        });\n        console.log(node);\n        global && setGlobal({\n          node: dimensions\n        });\n      };\n\n      measure();\n      window.addEventListener(\"resize\", measure); // window.addEventListener(\"scroll\", measure);\n\n      return function () {\n        window.removeEventListener(\"resize\", measure); // window.removeEventListener(\"scroll\", measure);\n      };\n    }\n  }, [node]);\n  return [ref, dimensions, node];\n}\n\nexport default useDimensions;","map":{"version":3,"sources":["/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/utils/hooks/useDimensions.js"],"names":["useState","useCallback","useEffect","getDimensionObject","node","rect","getBoundingClientRect","width","height","top","x","left","y","right","bottom","useDimensions","dimensions","setDimensions","setNode","ref","measure","window","requestAnimationFrame","console","log","global","setGlobal","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD,C,CACA;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AACjC,MAAMC,IAAI,GAAGD,IAAI,CAACE,qBAAL,EAAb;AAEA,SAAO;AACNC,IAAAA,KAAK,EAAEF,IAAI,CAACE,KADN;AAENC,IAAAA,MAAM,EAAEH,IAAI,CAACG,MAFP;AAGNC,IAAAA,GAAG,EAAE,OAAOJ,IAAP,GAAcA,IAAI,CAACK,CAAnB,GAAuBL,IAAI,CAACI,GAH3B;AAINE,IAAAA,IAAI,EAAE,OAAON,IAAP,GAAcA,IAAI,CAACO,CAAnB,GAAuBP,IAAI,CAACM,IAJ5B;AAKND,IAAAA,CAAC,EAAE,OAAOL,IAAP,GAAcA,IAAI,CAACK,CAAnB,GAAuBL,IAAI,CAACM,IALzB;AAMNC,IAAAA,CAAC,EAAE,OAAOP,IAAP,GAAcA,IAAI,CAACO,CAAnB,GAAuBP,IAAI,CAACI,GANzB;AAONI,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAPN;AAQNC,IAAAA,MAAM,EAAET,IAAI,CAACS;AARP,GAAP;AAUA;;AAED,SAASC,aAAT,GAAyB;AAAA,kBACYf,QAAQ,CAAC,EAAD,CADpB;AAAA,MACjBgB,UADiB;AAAA,MACLC,aADK;;AAAA,mBAEAjB,QAAQ,CAAC,IAAD,CAFR;AAAA,MAEjBI,IAFiB;AAAA,MAEXc,OAFW;;AAIxB,MAAMC,GAAG,GAAGlB,WAAW,CAAC,UAAAG,IAAI,EAAI;AAC/Bc,IAAAA,OAAO,CAACd,IAAD,CAAP;AACA,GAFsB,EAEpB,EAFoB,CAAvB;AAIAF,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIE,IAAJ,EAAU;AACT,UAAMgB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACrBC,QAAAA,MAAM,CAACC,qBAAP,CAA6B;AAAA,iBAAML,aAAa,CAACd,kBAAkB,CAACC,IAAD,CAAnB,CAAnB;AAAA,SAA7B;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACAqB,QAAAA,MAAM,IAAIC,SAAS,CAAC;AAAEtB,UAAAA,IAAI,EAAEY;AAAR,SAAD,CAAnB;AACA,OAJD;;AAMAI,MAAAA,OAAO;AAEPC,MAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,OAAlC,EATS,CAUT;;AAEA,aAAO,YAAM;AACZC,QAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,OAArC,EADY,CAEZ;AACA,OAHD;AAIA;AACD,GAlBQ,EAkBN,CAAChB,IAAD,CAlBM,CAAT;AAoBA,SAAO,CAACe,GAAD,EAAMH,UAAN,EAAkBZ,IAAlB,CAAP;AACA;;AAED,eAAeW,aAAf","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\n// import { DimensionObject, UseDimensionsArgs, UseDimensionsHook } from \"./types\";\n\nfunction getDimensionObject(node) {\n\tconst rect = node.getBoundingClientRect();\n\n\treturn {\n\t\twidth: rect.width,\n\t\theight: rect.height,\n\t\ttop: \"x\" in rect ? rect.x : rect.top,\n\t\tleft: \"y\" in rect ? rect.y : rect.left,\n\t\tx: \"x\" in rect ? rect.x : rect.left,\n\t\ty: \"y\" in rect ? rect.y : rect.top,\n\t\tright: rect.right,\n\t\tbottom: rect.bottom\n\t};\n}\n\nfunction useDimensions() {\n\tconst [dimensions, setDimensions] = useState({});\n\tconst [node, setNode] = useState(null);\n\n\tconst ref = useCallback(node => {\n\t\tsetNode(node);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (node) {\n\t\t\tconst measure = () => {\n\t\t\t\twindow.requestAnimationFrame(() => setDimensions(getDimensionObject(node)));\n\t\t\t\tconsole.log(node);\n\t\t\t\tglobal && setGlobal({ node: dimensions });\n\t\t\t};\n\n\t\t\tmeasure();\n\n\t\t\twindow.addEventListener(\"resize\", measure);\n\t\t\t// window.addEventListener(\"scroll\", measure);\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener(\"resize\", measure);\n\t\t\t\t// window.removeEventListener(\"scroll\", measure);\n\t\t\t};\n\t\t}\n\t}, [node]);\n\n\treturn [ref, dimensions, node];\n}\n\nexport default useDimensions;\n"]},"metadata":{},"sourceType":"module"}