{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/components/ProjectViewer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useGlobal } from \"reactn\";\nimport useWindowSize from \"../utils/hooks/useWindowSize\";\nimport { capitalize } from \"../scripts/utils\";\nimport * as ViewerSections from \"./viewer\";\n\nfunction ProjectViewer(props) {\n  const {\n    content,\n    clickEnabled\n  } = props,\n        [slideIndex, setSlide] = useGlobal(\"headerSize\");\n\n  let resolveSections = section => {\n    // eslint-disable-next-line import/namespace\n    const Section = ViewerSections[capitalize(section._type)];\n\n    if (Section) {\n      return Section;\n    }\n\n    console.error(\"Cant find section\", section); // eslint-disable-line no-console\n\n    return null;\n  };\n\n  console.log(slideIndex);\n  return __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, content.map((section, i) => {\n    const ViewerSection = resolveSections(section);\n\n    if (!ViewerSection) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Missing section \", section._type);\n    }\n\n    return __jsx(\"li\", {\n      key: section._key,\n      className: slideIndex === i ? \"visible\" : \"hidden\" //style={{ pointerEvents: clickEnabled ? \"auto\" : \"none\" }}\n      ,\n      onMouseUp: () => {\n        console.log(i);\n\n        if (clickEnabled) {\n          setSlide(slideIndex === content.length - 1 ? 0 : i + 1);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(ViewerSection, _extends({}, section, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }));\n}\n\nexport default ProjectViewer;","map":{"version":3,"sources":["/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/components/ProjectViewer.js"],"names":["useState","useRef","useGlobal","useWindowSize","capitalize","ViewerSections","ProjectViewer","props","content","clickEnabled","slideIndex","setSlide","resolveSections","section","Section","_type","console","error","log","map","i","ViewerSection","_key","length"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,QAA5C;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,KAAKC,cAAZ,MAAgC,UAAhC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA4BF,KAAlC;AAAA,QACC,CAACG,UAAD,EAAaC,QAAb,IAAyBT,SAAS,CAAC,YAAD,CADnC;;AAGA,MAAIU,eAAe,GAAGC,OAAO,IAAI;AAChC;AACA,UAAMC,OAAO,GAAGT,cAAc,CAACD,UAAU,CAACS,OAAO,CAACE,KAAT,CAAX,CAA9B;;AACA,QAAID,OAAJ,EAAa;AACZ,aAAOA,OAAP;AACA;;AACDE,IAAAA,OAAO,CAACC,KAAR,CAAc,mBAAd,EAAmCJ,OAAnC,EANgC,CAMa;;AAC7C,WAAO,IAAP;AACA,GARD;;AAUAG,EAAAA,OAAO,CAACE,GAAR,CAAYR,UAAZ;AAEA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,OAAO,CAACW,GAAR,CAAY,CAACN,OAAD,EAAUO,CAAV,KAAgB;AAC5B,UAAMC,aAAa,GAAGT,eAAe,CAACC,OAAD,CAArC;;AACA,QAAI,CAACQ,aAAL,EAAoB;AACnB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBR,OAAO,CAACE,KAA9B,CAAP;AACA;;AACD,WACC;AACC,MAAA,GAAG,EAAEF,OAAO,CAACS,IADd;AAEC,MAAA,SAAS,EAAEZ,UAAU,KAAKU,CAAf,GAAmB,SAAnB,GAA+B,QAF3C,CAGC;AAHD;AAIC,MAAA,SAAS,EAAE,MAAM;AAChBJ,QAAAA,OAAO,CAACE,GAAR,CAAYE,CAAZ;;AAEA,YAAIX,YAAJ,EAAkB;AACjBE,UAAAA,QAAQ,CAACD,UAAU,KAAKF,OAAO,CAACe,MAAR,GAAiB,CAAhC,GAAoC,CAApC,GAAwCH,CAAC,GAAG,CAA7C,CAAR;AACA;AACD,OAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYC,MAAC,aAAD,eAAmBP,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZD,CADD;AAgBA,GArBA,CADF,CADD;AA0BA;;AAED,eAAeP,aAAf","sourcesContent":["import { useState, useRef, useGlobal } from \"reactn\";\n\nimport useWindowSize from \"../utils/hooks/useWindowSize\";\nimport { capitalize } from \"../scripts/utils\";\n\nimport * as ViewerSections from \"./viewer\";\n\nfunction ProjectViewer(props) {\n\tconst { content, clickEnabled } = props,\n\t\t[slideIndex, setSlide] = useGlobal(\"headerSize\");\n\n\tlet resolveSections = section => {\n\t\t// eslint-disable-next-line import/namespace\n\t\tconst Section = ViewerSections[capitalize(section._type)];\n\t\tif (Section) {\n\t\t\treturn Section;\n\t\t}\n\t\tconsole.error(\"Cant find section\", section); // eslint-disable-line no-console\n\t\treturn null;\n\t};\n\n\tconsole.log(slideIndex);\n\n\treturn (\n\t\t<ul>\n\t\t\t{content.map((section, i) => {\n\t\t\t\tconst ViewerSection = resolveSections(section);\n\t\t\t\tif (!ViewerSection) {\n\t\t\t\t\treturn <div>Missing section {section._type}</div>;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={section._key}\n\t\t\t\t\t\tclassName={slideIndex === i ? \"visible\" : \"hidden\"}\n\t\t\t\t\t\t//style={{ pointerEvents: clickEnabled ? \"auto\" : \"none\" }}\n\t\t\t\t\t\tonMouseUp={() => {\n\t\t\t\t\t\t\tconsole.log(i);\n\n\t\t\t\t\t\t\tif (clickEnabled) {\n\t\t\t\t\t\t\t\tsetSlide(slideIndex === content.length - 1 ? 0 : i + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ViewerSection {...section} />\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n}\n\nexport default ProjectViewer;\n"]},"metadata":{},"sourceType":"module"}