{"ast":null,"code":"var _jsxFileName = \"/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/components/ProjectGridContainer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { enableViewer } from \"../utils/redux/actions\";\nimport Media from \"./Media\";\n\nfunction ProjectGridContainer(props) {\n  const {\n    content,\n    mediaFeatured,\n    id,\n    total,\n    viewerOpen,\n    enableViewer,\n    slideIndex\n  } = props;\n  return __jsx(\"figure\", {\n    onClick: () => {\n      enableViewer(id, 0);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Media, {\n    type: \"video\",\n    asset: mediaFeatured.asset,\n    gif: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => ({\n  viewerOpen: state.viewer.viewerOpen,\n  viewerID: state.viewer.viewerID,\n  slideIndex: state.viewer.slideIndex\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  enableViewer\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectGridContainer);","map":{"version":3,"sources":["/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/components/ProjectGridContainer.js"],"names":["connect","bindActionCreators","enableViewer","Media","ProjectGridContainer","props","content","mediaFeatured","id","total","viewerOpen","slideIndex","asset","mapStateToProps","state","viewer","viewerID","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA,EAA1B;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,UAArC;AAAiDR,IAAAA,YAAjD;AAA+DS,IAAAA;AAA/D,MAA8EN,KAApF;AAEA,SACC;AACC,IAAA,OAAO,EAAE,MAAM;AACdH,MAAAA,YAAY,CAACM,EAAD,EAAK,CAAL,CAAZ;AACA,KAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAED,aAAa,CAACK,KAAzC;AAAgD,IAAA,GAAG,EAAE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD;AASA;;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCJ,EAAAA,UAAU,EAAEI,KAAK,CAACC,MAAN,CAAaL,UADQ;AAEjCM,EAAAA,QAAQ,EAAEF,KAAK,CAACC,MAAN,CAAaC,QAFU;AAGjCL,EAAAA,UAAU,EAAEG,KAAK,CAACC,MAAN,CAAaJ;AAHQ,CAAL,CAA7B;;AAMA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAIjB,kBAAkB,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAmBgB,QAAnB,CAAzD;;AAEA,eAAelB,OAAO,CACrBa,eADqB,EAErBI,kBAFqB,CAAP,CAGbb,oBAHa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { enableViewer } from \"../utils/redux/actions\";\n\nimport Media from \"./Media\";\n\nfunction ProjectGridContainer(props) {\n\tconst { content, mediaFeatured, id, total, viewerOpen, enableViewer, slideIndex } = props;\n\n\treturn (\n\t\t<figure\n\t\t\tonClick={() => {\n\t\t\t\tenableViewer(id, 0);\n\t\t\t}}\n\t\t>\n\t\t\t<Media type=\"video\" asset={mediaFeatured.asset} gif={false} />\n\t\t</figure>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tviewerOpen: state.viewer.viewerOpen,\n\tviewerID: state.viewer.viewerID,\n\tslideIndex: state.viewer.slideIndex\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ enableViewer }, dispatch);\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ProjectGridContainer);\n"]},"metadata":{},"sourceType":"module"}