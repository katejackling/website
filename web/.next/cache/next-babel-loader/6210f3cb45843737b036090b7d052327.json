{"ast":null,"code":"var _jsxFileName = \"/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/components/Projects.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport ProjectFeedContainer from \"../components/ProjectFeedContainer\";\nimport ProjectViewerContainer from \"../components/ProjectViewerContainer\";\n\nfunction Projects(props) {\n  const {\n    viewerOpen,\n    viewerContent\n  } = props;\n  console.log(viewerContent);\n  return __jsx(React.Fragment, null, __jsx(ProjectFeedContainer, {\n    type: \"stilllife\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), __jsx(ProjectFeedContainer, {\n    type: \"commercial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), __jsx(ProjectFeedContainer, {\n    type: \"film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), viewerOpen && __jsx(ProjectViewerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => ({\n  viewerOpen: state.viewer.viewerOpen,\n  viewerContent: state.viewer.viewerContent,\n  viewerID: state.viewer.viewerID,\n  slideIndex: state.viewer.slideIndex\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","map":{"version":3,"sources":["/Users/philipppolder/Dropbox/Projekte/Kate Jackling/Local Root/kate-jackling/web/components/Projects.js"],"names":["connect","bindActionCreators","ProjectFeedContainer","ProjectViewerContainer","Projects","props","viewerOpen","viewerContent","console","log","mapStateToProps","state","viewer","viewerID","slideIndex","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,sBAAP,MAAmC,sCAAnC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCF,KAAtC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,SACC,4BACC,MAAC,oBAAD;AAAsB,IAAA,IAAI,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,oBAAD;AAAsB,IAAA,IAAI,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,oBAAD;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIED,UAAU,IAAI,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJhB,CADD;AAQA;;AAED,MAAMI,eAAe,GAAGC,KAAK,KAAK;AACjCL,EAAAA,UAAU,EAAEK,KAAK,CAACC,MAAN,CAAaN,UADQ;AAEjCC,EAAAA,aAAa,EAAEI,KAAK,CAACC,MAAN,CAAaL,aAFK;AAGjCM,EAAAA,QAAQ,EAAEF,KAAK,CAACC,MAAN,CAAaC,QAHU;AAIjCC,EAAAA,UAAU,EAAEH,KAAK,CAACC,MAAN,CAAaE;AAJQ,CAAL,CAA7B;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAIf,kBAAkB,CAAC,EAAD,EAAKe,QAAL,CAAzD;;AAEA,eAAehB,OAAO,CACrBU,eADqB,EAErBK,kBAFqB,CAAP,CAGbX,QAHa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport ProjectFeedContainer from \"../components/ProjectFeedContainer\";\nimport ProjectViewerContainer from \"../components/ProjectViewerContainer\";\n\nfunction Projects(props) {\n\tconst { viewerOpen, viewerContent } = props;\n\tconsole.log(viewerContent);\n\treturn (\n\t\t<>\n\t\t\t<ProjectFeedContainer type=\"stilllife\" />\n\t\t\t<ProjectFeedContainer type=\"commercial\" />\n\t\t\t<ProjectFeedContainer type=\"film\" />\n\t\t\t{viewerOpen && <ProjectViewerContainer />}\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tviewerOpen: state.viewer.viewerOpen,\n\tviewerContent: state.viewer.viewerContent,\n\tviewerID: state.viewer.viewerID,\n\tslideIndex: state.viewer.slideIndex\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Projects);\n"]},"metadata":{},"sourceType":"module"}