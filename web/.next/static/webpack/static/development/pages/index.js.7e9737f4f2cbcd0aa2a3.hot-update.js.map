{"version":3,"file":"static/webpack/static/development/pages/index.js.7e9737f4f2cbcd0aa2a3.hot-update.js","sources":["webpack:///./utils/hooks/useDimensions.js"],"sourcesContent":["import { useState, useCallback, useEffect, setGlobal } from \"reactn\";\n// import { DimensionObject, UseDimensionsArgs, UseDimensionsHook } from \"./types\";\n\nfunction getDimensionObject(node) {\n\tconst rect = node.getBoundingClientRect();\n\n\treturn {\n\t\twidth: rect.width,\n\t\theight: rect.height,\n\t\ttop: \"x\" in rect ? rect.x : rect.top,\n\t\tleft: \"y\" in rect ? rect.y : rect.left,\n\t\tx: \"x\" in rect ? rect.x : rect.left,\n\t\ty: \"y\" in rect ? rect.y : rect.top,\n\t\tright: rect.right,\n\t\tbottom: rect.bottom\n\t};\n}\n\nfunction useDimensions(global) {\n\tconst [dimensions, setDimensions] = useState({});\n\tconst [node, setNode] = useState(null);\n\n\tconst ref = useCallback(node => {\n\t\tsetNode(node);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (node) {\n\t\t\tconst measure = () => {\n\t\t\t\twindow.requestAnimationFrame(() => setDimensions(getDimensionObject(node)));\n\t\t\t\tlet test = { [global.global]: dimensions };\n\t\t\t\tconsole.log(global, test);\n\t\t\t\tglobal && setGlobal({ [global]: dimensions });\n\t\t\t};\n\n\t\t\tmeasure();\n\n\t\t\twindow.addEventListener(\"resize\", measure);\n\t\t\t// window.addEventListener(\"scroll\", measure);\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener(\"resize\", measure);\n\t\t\t\t// window.removeEventListener(\"scroll\", measure);\n\t\t\t};\n\t\t}\n\t}, [node]);\n\n\treturn [ref, dimensions, node];\n}\n\nexport default useDimensions;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}